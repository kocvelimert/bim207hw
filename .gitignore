import java.io.IOException;
import java.net.URL;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;

import opennlp.tools.namefind.NameFinderME;
import opennlp.tools.namefind.TokenNameFinderModel;
import opennlp.tools.sentdetect.SentenceDetectorME;
import opennlp.tools.sentdetect.SentenceModel;
import opennlp.tools.tokenize.TokenizerME;
import opennlp.tools.tokenize.TokenizerModel;
import opennlp.tools.util.Span;

public class NameExtractor {
    public static void main(String[] args) throws IOException {
        // Check if a URL was provided as an argument
        if (args.length != 1) {
            System.out.println("Please provide a URL as an argument.");
            return;
        }

        // Parse the URL from the argument
        URL url = new URL(args[0]);

        // Use JSoup to get the text of the body element from the web page
        Document doc = Jsoup.connect(url.toString()).get();
        Element body = doc.body();
        String text = body.text();

        // Load the trained models for sentence detection, tokenization, and name finding
        SentenceModel sentenceModel = new SentenceModel(
                NameExtractor.class.getResourceAsStream("/en-sent.bin"));
        TokenizerModel tokenizerModel = new TokenizerModel(
                NameExtractor.class.getResourceAsStream("/en-token.bin"));
        TokenNameFinderModel nameFinderModel = new TokenNameFinderModel(
                NameExtractor.class.getResourceAsStream("/en-ner-person.bin"));

        // Create the sentence detector, tokenizer, and name finder
        SentenceDetectorME sentenceDetector = new SentenceDetectorME(sentenceModel);
        TokenizerME tokenizer = new TokenizerME(tokenizerModel);
        NameFinderME nameFinder = new NameFinderME(nameFinderModel);

        // Split the text into sentences
        String[] sentences = sentenceDetector.sentDetect(text);

        // Find names in each sentence
        for (String sentence : sentences) {
            // Tokenize the sentence
            String[] tokens = tokenizer.tokenize(sentence);

            // Find the names in the sentence
            Span[] nameSpans = nameFinder.find(tokens);

            // Print the names to the console
            for (Span span : nameSpans) {
                String name = span.getCoveredText(sentence).toString();
                System.out.println(name);
            }
        }
    }
}
